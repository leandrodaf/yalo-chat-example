{
  "openapi": "3.0.0",
  "info": {
    "title": "Yalo Chat - Partner - Example",
    "description": "This application is not official, but it aims to guide partners to create and evolve their integrations with yalo",
    "contact": {
      "name": "Leandro Ferreira",
      "email": "leandro.daf4@gmail.com"
    },
    "version": "1.0",
    "x-codegen-settings": {
      "Nullify404": false,
      "GenerateAsyncCode": true,
      "UseMethodPrefix": false,
      "UseModelPostfix": false,
      "UseControllerPrefix": true,
      "UseEnumPostfix": true,
      "CollectParameters": false,
      "UseConstructorsForConfig": false,
      "UseCommonSDKLibrary": false,
      "iOSUseAppInfoPlist": false,
      "AndroidUseAppManifest": false,
      "BodySerialization": 0,
      "EnableAdditionalModelProperties": false,
      "PreserveParameterOrder": true,
      "AppendContentHeaders": true,
      "iOSGenerateCoreData": false,
      "GenerateInterfaces": false,
      "NodeHttpClient": "NODE_REQUEST",
      "ValidateRequiredParameters": false,
      "JavaUsePropertiesConfig": false,
      "Timeout": 0.0,
      "StoreTimezoneInformation": false,
      "EnablePHPComposerVersionString": false,
      "EnableLogging": false,
      "ArraySerialization": "Indexed",
      "ModelSerializationScheme": "Json",
      "UseExceptionPrefix": true,
      "RunscopeEnabled": false,
      "AndroidHttpClient": "ANDROID_OK",
      "ObjCHttpClient": "UNIREST",
      "CSharpHttpClient": "UNIREST",
      "PHPHttpClient": "UNIREST",
      "JavaHttpClient": "JAVA_OK",
      "ParameterArrayFormat": "ParamArrayWithIndex",
      "SecurityProtocols": ["Ssl3", "Tls"],
      "GenerateTravisConfig": false,
      "GenerateCircleConfig": false,
      "GenerateAppveyorConfig": false,
      "GenerateJenkinsConfig": false,
      "EnableHttpCache": false,
      "Retries": 0,
      "RetryInterval": 1.0,
      "GenerateAdvancedDocs": true,
      "UnderscoreNumbers": true,
      "UseSingletonPattern": true,
      "DisableLinting": false,
      "ApplyCustomizations": [],
      "SortResources": false,
      "AllowSkippingSSLCertVerification": false,
      "DoNotSplitWords": [],
      "EnableGlobalUserAgent": true,
      "ReturnCompleteHttpResponse": false,
      "GenerateModels": true,
      "GenerateExceptions": true,
      "IgnoreIfNullJson": false,
      "DisableDocs": false,
      "LiftParameterDescriptionFromCustomType": false,
      "ThrowForHttpErrorStatusCodes": true,
      "ResponseMapping": {
        "Type": "Simple"
      },
      "ForceKeywordArgsInRuby": false,
      "SymbolizeHashKeysInRuby": false,
      "UsageExampleEndpoint": {
        "Description": "",
        "EndpointGroupName": "",
        "EndpointName": ""
      },
      "IsLatestVersion": false,
      "EnableImmutableModels": false,
      "GenerateEnums": true,
      "BackoffFactor": 2.0,
      "StatusCodesToRetry": [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
      "RequestMethodsToRetry": ["GET", "PUT"],
      "UserConfigurableRetries": true,
      "UseEndpointMethodName": false,
      "EncodeTemplateParameters": true,
      "GenerateExamplesForOptionalFields": false,
      "MultitargetDotnetVersions": false,
      "BackoffMax": 0.0,
      "RetryOnTimeout": true,
      "EnableCookies": false,
      "EnableJsonPassThroughForAny": false
    },
    "x-server-configuration": {
      "default-environment": "production",
      "default-server": "default",
      "environments": [
        {
          "name": "production",
          "description": "develop",
          "servers": [
            {
              "name": "default",
              "url": "http://localhost:3001"
            }
          ]
        }
      ],
      "parameters": []
    },
    "x-image-uri": ""
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "develop",
      "variables": {}
    }
  ],
  "paths": {
    "/api/v1/webhook": {
      "post": {
        "tags": ["Webhook"],
        "summary": "post-webhook",
        "description": "Endpoint responsible for receiving webhook integration messages",
        "operationId": "post-webhook",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/api/v1/webhook"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "statusCode": "200",
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test post-webhook",
            "x-testDescription": "Endpoint responsible for receiving webhook integration messages"
          }
        ]
      }
    },
    "/api/v1/chat/turn/{action}": {
      "post": {
        "tags": ["Chat"],
        "summary": "post-api-v1-chat-turn-action",
        "description": "Endpoint responsible for enabling or disabling the transfer of messages from the webhook enpoint",
        "operationId": "post-api-v1-chat-turn-action",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/action"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Chat"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {}
          }
        },
        "deprecated": false,
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    }
  },
  "components": {
    "schemas": {
      "Message": {
        "title": "Message",
        "required": ["id", "timestamp", "type", "from", "bot"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Type"
          },
          "from": {
            "type": "string"
          },
          "bot": {
            "$ref": "#/components/schemas/Bot"
          },
          "voice": {
            "$ref": "#/components/schemas/Voice"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          },
          "text": {
            "$ref": "#/components/schemas/Text"
          }
        },
        "description": "Yalo Message"
      },
      "Chat": {
        "title": "Chat",
        "required": ["phoneNumber", "bot"],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "bot": {
            "$ref": "#/components/schemas/Bot1"
          }
        },
        "example": {
          "phoneNumber": "string",
          "bot": {
            "id": "string"
          }
        }
      },
      "action": {
        "title": "action",
        "enum": ["off", "on"],
        "type": "string",
        "example": "off",
        "x-enum-elements": [
          {
            "name": "off",
            "description": ""
          },
          {
            "name": "on",
            "description": ""
          }
        ]
      },
      "Bot": {
        "title": "Bot",
        "required": ["id", "phone"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Bot1": {
        "title": "Bot1",
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "Document": {
        "title": "Document",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          }
        }
      },
      "Image": {
        "title": "Image",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          }
        }
      },
      "Text": {
        "title": "Text",
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          }
        }
      },
      "Type": {
        "title": "Type",
        "enum": ["voice", "document", "image", "text"],
        "type": "string",
        "example": "voice",
        "x-enum-elements": [
          {
            "name": "voice",
            "description": ""
          },
          {
            "name": "document",
            "description": ""
          },
          {
            "name": "image",
            "description": ""
          },
          {
            "name": "text",
            "description": ""
          }
        ]
      },
      "Voice": {
        "title": "Voice",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [{}],
  "tags": [
    {
      "name": "Webhook",
      "description": "Webhook Integration"
    },
    {
      "name": "Chat",
      "description": "User manipulation in chat"
    }
  ]
}
